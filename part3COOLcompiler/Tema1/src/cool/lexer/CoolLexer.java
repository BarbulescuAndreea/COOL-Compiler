// Generated from E:/D/Facultate/Anul_IV_Semestrul_I/CPL/Teme/Tema2AnalizaSemnatica/Tema2/src/cool/lexer/CoolLexer.g4 by ANTLR 4.13.1

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, IF=2, THEN=3, ELSE=4, FI=5, CLASS=6, INHERITS=7, NEW=8, ATSIGN=9, 
		ISVOID=10, LET=11, IN=12, LOOP=13, POOL=14, WHILE=15, CASE=16, OF=17, 
		ESAC=18, CASEITEM=19, TRUE=20, FALSE=21, ASSIGN=22, PLUS=23, MINUS=24, 
		MULT=25, DIVIDE=26, TILDE=27, NOT=28, EQUAL=29, LOWER=30, LOWE_AND_EQUAL=31, 
		SEMICOLON=32, COLON=33, DOT=34, COMMA=35, INT=36, ID=37, TYPE=38, LPAREN=39, 
		RPAREN=40, LBOX=41, RBOX=42, LBRACE=43, RBRACE=44, STRING=45, STRING_CONTANS_NULL=46, 
		STRING_UNTERMINATED=47, STRING_CONTAINS_END_OF_FILE=48, LINE_COMMENT=49, 
		UNAMTECHED_BLOCK_COMMENT=50, BLOCK_COMMENT=51, OPNENED_NOT_CLOSED=52, 
		INVALID_CHARACTER=53, WS=54;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"IF", "THEN", "ELSE", "FI", "CLASS", "INHERITS", "NEW", "ATSIGN", "ISVOID", 
			"LET", "IN", "LOOP", "POOL", "WHILE", "CASE", "OF", "ESAC", "CASEITEM", 
			"TRUE", "FALSE", "ASSIGN", "PLUS", "MINUS", "MULT", "DIVIDE", "TILDE", 
			"NOT", "EQUAL", "LOWER", "LOWE_AND_EQUAL", "SEMICOLON", "COLON", "DOT", 
			"COMMA", "DIGIT", "INT", "LETTER", "LOWER_CASE_LETTER", "UPPER_CASE_LETTER", 
			"ID", "TYPE", "LPAREN", "RPAREN", "LBOX", "RBOX", "LBRACE", "RBRACE", 
			"ESCAPED_NEWLINE", "STRING", "STRING_CONTANS_NULL", "STRING_UNTERMINATED", 
			"STRING_CONTAINS_END_OF_FILE", "NEW_LINE", "LINE_COMMENT", "UNAMTECHED_BLOCK_COMMENT", 
			"BLOCK_COMMENT", "OPNENED_NOT_CLOSED", "INVALID_CHARACTER", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'if'", "'then'", "'else'", "'fi'", "'class'", "'inherits'", 
			"'new'", "'@'", "'isvoid'", "'let'", "'in'", "'loop'", "'pool'", "'while'", 
			"'case'", "'of'", "'esac'", "'=>'", "'true'", "'false'", "'<-'", "'+'", 
			"'-'", "'*'", "'/'", "'~'", "'not'", "'='", "'<'", "'<='", "';'", "':'", 
			"'.'", "','", null, null, null, "'('", "')'", "'['", "']'", "'{'", "'}'", 
			null, null, null, null, null, "'*)'", null, null, "'#'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "IF", "THEN", "ELSE", "FI", "CLASS", "INHERITS", "NEW", 
			"ATSIGN", "ISVOID", "LET", "IN", "LOOP", "POOL", "WHILE", "CASE", "OF", 
			"ESAC", "CASEITEM", "TRUE", "FALSE", "ASSIGN", "PLUS", "MINUS", "MULT", 
			"DIVIDE", "TILDE", "NOT", "EQUAL", "LOWER", "LOWE_AND_EQUAL", "SEMICOLON", 
			"COLON", "DOT", "COMMA", "INT", "ID", "TYPE", "LPAREN", "RPAREN", "LBOX", 
			"RBOX", "LBRACE", "RBRACE", "STRING", "STRING_CONTANS_NULL", "STRING_UNTERMINATED", 
			"STRING_CONTAINS_END_OF_FILE", "LINE_COMMENT", "UNAMTECHED_BLOCK_COMMENT", 
			"BLOCK_COMMENT", "OPNENED_NOT_CLOSED", "INVALID_CHARACTER", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 48:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 49:
			STRING_CONTANS_NULL_action((RuleContext)_localctx, actionIndex);
			break;
		case 50:
			STRING_UNTERMINATED_action((RuleContext)_localctx, actionIndex);
			break;
		case 51:
			STRING_CONTAINS_END_OF_FILE_action((RuleContext)_localctx, actionIndex);
			break;
		case 54:
			UNAMTECHED_BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 55:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 56:
			OPNENED_NOT_CLOSED_action((RuleContext)_localctx, actionIndex);
			break;
		case 57:
			INVALID_CHARACTER_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			        String defaultText = getText();

			        // check for unescaped new lines
			        int enter = defaultText.indexOf('\n');
			        while(enter != -1 && enter < defaultText.length()) {
			            if (enter == 0 || defaultText.charAt(enter - 2) != '\\') {
			                raiseError("Unterminated string constant");
			            }
			            enter = defaultText.indexOf('\n', enter + 1);
			        }

			        // delete "
			        setText(defaultText.substring(1, defaultText.length() - 1)
			                            .replace("\\t", "\t")
			                            .replace("\\b", "\b")
			                            .replace("\\f", "\f")
			                            .replace("\\n", "\n")
			                            .replaceAll("\\\\(?![\\\\])", "")
			                );

			        if (getText().length() > 1024) {
			            raiseError("String constant too long");
			        }
			    
			break;
		}
	}
	private void STRING_CONTANS_NULL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:

			        raiseError("String contains null character");
			    
			break;
		}
	}
	private void STRING_UNTERMINATED_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2:

			        raiseError("Unterminated string constant");
			    
			break;
		}
	}
	private void STRING_CONTAINS_END_OF_FILE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:

			        raiseError("EOF in string constant");
			    
			break;
		}
	}
	private void UNAMTECHED_BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			 raiseError("Unmatched *)");
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 5:

			                raiseError("EOF in comment");
			            
			break;
		case 6:

			        if ( !getText().equals("EOF in comment"))
			            skip();
			    
			break;
		}
	}
	private void OPNENED_NOT_CLOSED_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 7:
			 raiseError("EOF in comment"); 
			break;
		}
	}
	private void INVALID_CHARACTER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 8:

			        raiseError("Invalid character: #");
			    
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00006\u01a6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u00026\u00076\u00027\u00077\u00028\u00078\u00029\u00079\u0002:\u0007"+
		":\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015"+
		"\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018"+
		"\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001"+
		" \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0004#\u00f9\b#\u000b#\f#\u00fa"+
		"\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001\'\u0001"+
		"\'\u0005\'\u0107\b\'\n\'\f\'\u010a\t\'\u0001(\u0001(\u0001(\u0001(\u0005"+
		"(\u0110\b(\n(\f(\u0113\t(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001"+
		"(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0003(\u0122\b(\u0001)\u0001"+
		")\u0001*\u0001*\u0001+\u0001+\u0001,\u0001,\u0001-\u0001-\u0001.\u0001"+
		".\u0001/\u0001/\u0001/\u00010\u00010\u00010\u00010\u00010\u00050\u0138"+
		"\b0\n0\f0\u013b\t0\u00010\u00010\u00010\u00011\u00011\u00011\u00011\u0005"+
		"1\u0144\b1\n1\f1\u0147\t1\u00011\u00011\u00011\u00012\u00012\u00012\u0001"+
		"2\u00052\u0150\b2\n2\f2\u0153\t2\u00012\u00012\u00012\u00013\u00013\u0001"+
		"3\u00013\u00053\u015c\b3\n3\f3\u015f\t3\u00013\u00013\u00033\u0163\b3"+
		"\u00013\u00013\u00014\u00034\u0168\b4\u00014\u00014\u00015\u00015\u0001"+
		"5\u00015\u00055\u0170\b5\n5\f5\u0173\t5\u00015\u00015\u00035\u0177\b5"+
		"\u00015\u00015\u00016\u00016\u00016\u00016\u00016\u00017\u00017\u0001"+
		"7\u00017\u00017\u00017\u00017\u00017\u00057\u0188\b7\n7\f7\u018b\t7\u0001"+
		"7\u00017\u00017\u00017\u00017\u00018\u00018\u00018\u00018\u00058\u0196"+
		"\b8\n8\f8\u0199\t8\u00018\u00018\u00019\u00019\u00019\u0001:\u0004:\u01a1"+
		"\b:\u000b:\f:\u01a2\u0001:\u0001:\u0007\u0139\u0145\u0151\u015d\u0171"+
		"\u0189\u0197\u0000;\u0001\u0002\u0003\u0003\u0005\u0004\u0007\u0005\t"+
		"\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019"+
		"\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015"+
		")\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e;\u001f"+
		"= ?!A\"C#E\u0000G$I\u0000K\u0000M\u0000O%Q&S\'U(W)Y*[+],_\u0000a-c.e/"+
		"g0i\u0000k1m2o3q4s5u6\u0001\u0000\t\u0001\u000009\u0002\u0000AZaz\u0001"+
		"\u0000az\u0001\u0000AZ\u0002\u0000\u0000\u0000\n\n\u0001\u0000\n\n\u0002"+
		"\u0000\n\n\"\"\u0001\u0000\"\"\u0003\u0000\t\n\f\r  \u01ba\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000"+
		"C\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000O\u0001"+
		"\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000"+
		"\u0000\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000"+
		"Y\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000]\u0001"+
		"\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001\u0000\u0000"+
		"\u0000\u0000e\u0001\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000"+
		"k\u0001\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0000o\u0001"+
		"\u0000\u0000\u0000\u0000q\u0001\u0000\u0000\u0000\u0000s\u0001\u0000\u0000"+
		"\u0000\u0000u\u0001\u0000\u0000\u0000\u0001w\u0001\u0000\u0000\u0000\u0003"+
		"z\u0001\u0000\u0000\u0000\u0005\u007f\u0001\u0000\u0000\u0000\u0007\u0084"+
		"\u0001\u0000\u0000\u0000\t\u0087\u0001\u0000\u0000\u0000\u000b\u008d\u0001"+
		"\u0000\u0000\u0000\r\u0096\u0001\u0000\u0000\u0000\u000f\u009a\u0001\u0000"+
		"\u0000\u0000\u0011\u009c\u0001\u0000\u0000\u0000\u0013\u00a3\u0001\u0000"+
		"\u0000\u0000\u0015\u00a7\u0001\u0000\u0000\u0000\u0017\u00aa\u0001\u0000"+
		"\u0000\u0000\u0019\u00af\u0001\u0000\u0000\u0000\u001b\u00b4\u0001\u0000"+
		"\u0000\u0000\u001d\u00ba\u0001\u0000\u0000\u0000\u001f\u00bf\u0001\u0000"+
		"\u0000\u0000!\u00c2\u0001\u0000\u0000\u0000#\u00c7\u0001\u0000\u0000\u0000"+
		"%\u00ca\u0001\u0000\u0000\u0000\'\u00cf\u0001\u0000\u0000\u0000)\u00d5"+
		"\u0001\u0000\u0000\u0000+\u00d8\u0001\u0000\u0000\u0000-\u00da\u0001\u0000"+
		"\u0000\u0000/\u00dc\u0001\u0000\u0000\u00001\u00de\u0001\u0000\u0000\u0000"+
		"3\u00e0\u0001\u0000\u0000\u00005\u00e2\u0001\u0000\u0000\u00007\u00e6"+
		"\u0001\u0000\u0000\u00009\u00e8\u0001\u0000\u0000\u0000;\u00ea\u0001\u0000"+
		"\u0000\u0000=\u00ed\u0001\u0000\u0000\u0000?\u00ef\u0001\u0000\u0000\u0000"+
		"A\u00f1\u0001\u0000\u0000\u0000C\u00f3\u0001\u0000\u0000\u0000E\u00f5"+
		"\u0001\u0000\u0000\u0000G\u00f8\u0001\u0000\u0000\u0000I\u00fc\u0001\u0000"+
		"\u0000\u0000K\u00fe\u0001\u0000\u0000\u0000M\u0100\u0001\u0000\u0000\u0000"+
		"O\u0102\u0001\u0000\u0000\u0000Q\u0121\u0001\u0000\u0000\u0000S\u0123"+
		"\u0001\u0000\u0000\u0000U\u0125\u0001\u0000\u0000\u0000W\u0127\u0001\u0000"+
		"\u0000\u0000Y\u0129\u0001\u0000\u0000\u0000[\u012b\u0001\u0000\u0000\u0000"+
		"]\u012d\u0001\u0000\u0000\u0000_\u012f\u0001\u0000\u0000\u0000a\u0132"+
		"\u0001\u0000\u0000\u0000c\u013f\u0001\u0000\u0000\u0000e\u014b\u0001\u0000"+
		"\u0000\u0000g\u0157\u0001\u0000\u0000\u0000i\u0167\u0001\u0000\u0000\u0000"+
		"k\u016b\u0001\u0000\u0000\u0000m\u017a\u0001\u0000\u0000\u0000o\u017f"+
		"\u0001\u0000\u0000\u0000q\u0191\u0001\u0000\u0000\u0000s\u019c\u0001\u0000"+
		"\u0000\u0000u\u01a0\u0001\u0000\u0000\u0000wx\u0005i\u0000\u0000xy\u0005"+
		"f\u0000\u0000y\u0002\u0001\u0000\u0000\u0000z{\u0005t\u0000\u0000{|\u0005"+
		"h\u0000\u0000|}\u0005e\u0000\u0000}~\u0005n\u0000\u0000~\u0004\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005e\u0000\u0000\u0080\u0081\u0005l\u0000\u0000"+
		"\u0081\u0082\u0005s\u0000\u0000\u0082\u0083\u0005e\u0000\u0000\u0083\u0006"+
		"\u0001\u0000\u0000\u0000\u0084\u0085\u0005f\u0000\u0000\u0085\u0086\u0005"+
		"i\u0000\u0000\u0086\b\u0001\u0000\u0000\u0000\u0087\u0088\u0005c\u0000"+
		"\u0000\u0088\u0089\u0005l\u0000\u0000\u0089\u008a\u0005a\u0000\u0000\u008a"+
		"\u008b\u0005s\u0000\u0000\u008b\u008c\u0005s\u0000\u0000\u008c\n\u0001"+
		"\u0000\u0000\u0000\u008d\u008e\u0005i\u0000\u0000\u008e\u008f\u0005n\u0000"+
		"\u0000\u008f\u0090\u0005h\u0000\u0000\u0090\u0091\u0005e\u0000\u0000\u0091"+
		"\u0092\u0005r\u0000\u0000\u0092\u0093\u0005i\u0000\u0000\u0093\u0094\u0005"+
		"t\u0000\u0000\u0094\u0095\u0005s\u0000\u0000\u0095\f\u0001\u0000\u0000"+
		"\u0000\u0096\u0097\u0005n\u0000\u0000\u0097\u0098\u0005e\u0000\u0000\u0098"+
		"\u0099\u0005w\u0000\u0000\u0099\u000e\u0001\u0000\u0000\u0000\u009a\u009b"+
		"\u0005@\u0000\u0000\u009b\u0010\u0001\u0000\u0000\u0000\u009c\u009d\u0005"+
		"i\u0000\u0000\u009d\u009e\u0005s\u0000\u0000\u009e\u009f\u0005v\u0000"+
		"\u0000\u009f\u00a0\u0005o\u0000\u0000\u00a0\u00a1\u0005i\u0000\u0000\u00a1"+
		"\u00a2\u0005d\u0000\u0000\u00a2\u0012\u0001\u0000\u0000\u0000\u00a3\u00a4"+
		"\u0005l\u0000\u0000\u00a4\u00a5\u0005e\u0000\u0000\u00a5\u00a6\u0005t"+
		"\u0000\u0000\u00a6\u0014\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005i\u0000"+
		"\u0000\u00a8\u00a9\u0005n\u0000\u0000\u00a9\u0016\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0005l\u0000\u0000\u00ab\u00ac\u0005o\u0000\u0000\u00ac\u00ad"+
		"\u0005o\u0000\u0000\u00ad\u00ae\u0005p\u0000\u0000\u00ae\u0018\u0001\u0000"+
		"\u0000\u0000\u00af\u00b0\u0005p\u0000\u0000\u00b0\u00b1\u0005o\u0000\u0000"+
		"\u00b1\u00b2\u0005o\u0000\u0000\u00b2\u00b3\u0005l\u0000\u0000\u00b3\u001a"+
		"\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005w\u0000\u0000\u00b5\u00b6\u0005"+
		"h\u0000\u0000\u00b6\u00b7\u0005i\u0000\u0000\u00b7\u00b8\u0005l\u0000"+
		"\u0000\u00b8\u00b9\u0005e\u0000\u0000\u00b9\u001c\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0005c\u0000\u0000\u00bb\u00bc\u0005a\u0000\u0000\u00bc\u00bd"+
		"\u0005s\u0000\u0000\u00bd\u00be\u0005e\u0000\u0000\u00be\u001e\u0001\u0000"+
		"\u0000\u0000\u00bf\u00c0\u0005o\u0000\u0000\u00c0\u00c1\u0005f\u0000\u0000"+
		"\u00c1 \u0001\u0000\u0000\u0000\u00c2\u00c3\u0005e\u0000\u0000\u00c3\u00c4"+
		"\u0005s\u0000\u0000\u00c4\u00c5\u0005a\u0000\u0000\u00c5\u00c6\u0005c"+
		"\u0000\u0000\u00c6\"\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005=\u0000"+
		"\u0000\u00c8\u00c9\u0005>\u0000\u0000\u00c9$\u0001\u0000\u0000\u0000\u00ca"+
		"\u00cb\u0005t\u0000\u0000\u00cb\u00cc\u0005r\u0000\u0000\u00cc\u00cd\u0005"+
		"u\u0000\u0000\u00cd\u00ce\u0005e\u0000\u0000\u00ce&\u0001\u0000\u0000"+
		"\u0000\u00cf\u00d0\u0005f\u0000\u0000\u00d0\u00d1\u0005a\u0000\u0000\u00d1"+
		"\u00d2\u0005l\u0000\u0000\u00d2\u00d3\u0005s\u0000\u0000\u00d3\u00d4\u0005"+
		"e\u0000\u0000\u00d4(\u0001\u0000\u0000\u0000\u00d5\u00d6\u0005<\u0000"+
		"\u0000\u00d6\u00d7\u0005-\u0000\u0000\u00d7*\u0001\u0000\u0000\u0000\u00d8"+
		"\u00d9\u0005+\u0000\u0000\u00d9,\u0001\u0000\u0000\u0000\u00da\u00db\u0005"+
		"-\u0000\u0000\u00db.\u0001\u0000\u0000\u0000\u00dc\u00dd\u0005*\u0000"+
		"\u0000\u00dd0\u0001\u0000\u0000\u0000\u00de\u00df\u0005/\u0000\u0000\u00df"+
		"2\u0001\u0000\u0000\u0000\u00e0\u00e1\u0005~\u0000\u0000\u00e14\u0001"+
		"\u0000\u0000\u0000\u00e2\u00e3\u0005n\u0000\u0000\u00e3\u00e4\u0005o\u0000"+
		"\u0000\u00e4\u00e5\u0005t\u0000\u0000\u00e56\u0001\u0000\u0000\u0000\u00e6"+
		"\u00e7\u0005=\u0000\u0000\u00e78\u0001\u0000\u0000\u0000\u00e8\u00e9\u0005"+
		"<\u0000\u0000\u00e9:\u0001\u0000\u0000\u0000\u00ea\u00eb\u0005<\u0000"+
		"\u0000\u00eb\u00ec\u0005=\u0000\u0000\u00ec<\u0001\u0000\u0000\u0000\u00ed"+
		"\u00ee\u0005;\u0000\u0000\u00ee>\u0001\u0000\u0000\u0000\u00ef\u00f0\u0005"+
		":\u0000\u0000\u00f0@\u0001\u0000\u0000\u0000\u00f1\u00f2\u0005.\u0000"+
		"\u0000\u00f2B\u0001\u0000\u0000\u0000\u00f3\u00f4\u0005,\u0000\u0000\u00f4"+
		"D\u0001\u0000\u0000\u0000\u00f5\u00f6\u0007\u0000\u0000\u0000\u00f6F\u0001"+
		"\u0000\u0000\u0000\u00f7\u00f9\u0003E\"\u0000\u00f8\u00f7\u0001\u0000"+
		"\u0000\u0000\u00f9\u00fa\u0001\u0000\u0000\u0000\u00fa\u00f8\u0001\u0000"+
		"\u0000\u0000\u00fa\u00fb\u0001\u0000\u0000\u0000\u00fbH\u0001\u0000\u0000"+
		"\u0000\u00fc\u00fd\u0007\u0001\u0000\u0000\u00fdJ\u0001\u0000\u0000\u0000"+
		"\u00fe\u00ff\u0007\u0002\u0000\u0000\u00ffL\u0001\u0000\u0000\u0000\u0100"+
		"\u0101\u0007\u0003\u0000\u0000\u0101N\u0001\u0000\u0000\u0000\u0102\u0108"+
		"\u0003K%\u0000\u0103\u0107\u0003I$\u0000\u0104\u0107\u0003E\"\u0000\u0105"+
		"\u0107\u0005_\u0000\u0000\u0106\u0103\u0001\u0000\u0000\u0000\u0106\u0104"+
		"\u0001\u0000\u0000\u0000\u0106\u0105\u0001\u0000\u0000\u0000\u0107\u010a"+
		"\u0001\u0000\u0000\u0000\u0108\u0106\u0001\u0000\u0000\u0000\u0108\u0109"+
		"\u0001\u0000\u0000\u0000\u0109P\u0001\u0000\u0000\u0000\u010a\u0108\u0001"+
		"\u0000\u0000\u0000\u010b\u0111\u0003M&\u0000\u010c\u0110\u0003I$\u0000"+
		"\u010d\u0110\u0003E\"\u0000\u010e\u0110\u0005_\u0000\u0000\u010f\u010c"+
		"\u0001\u0000\u0000\u0000\u010f\u010d\u0001\u0000\u0000\u0000\u010f\u010e"+
		"\u0001\u0000\u0000\u0000\u0110\u0113\u0001\u0000\u0000\u0000\u0111\u010f"+
		"\u0001\u0000\u0000\u0000\u0111\u0112\u0001\u0000\u0000\u0000\u0112\u0122"+
		"\u0001\u0000\u0000\u0000\u0113\u0111\u0001\u0000\u0000\u0000\u0114\u0115"+
		"\u0005s\u0000\u0000\u0115\u0116\u0005e\u0000\u0000\u0116\u0117\u0005l"+
		"\u0000\u0000\u0117\u0122\u0005f\u0000\u0000\u0118\u0119\u0005S\u0000\u0000"+
		"\u0119\u011a\u0005E\u0000\u0000\u011a\u011b\u0005L\u0000\u0000\u011b\u011c"+
		"\u0005F\u0000\u0000\u011c\u011d\u0005_\u0000\u0000\u011d\u011e\u0005T"+
		"\u0000\u0000\u011e\u011f\u0005Y\u0000\u0000\u011f\u0120\u0005P\u0000\u0000"+
		"\u0120\u0122\u0005E\u0000\u0000\u0121\u010b\u0001\u0000\u0000\u0000\u0121"+
		"\u0114\u0001\u0000\u0000\u0000\u0121\u0118\u0001\u0000\u0000\u0000\u0122"+
		"R\u0001\u0000\u0000\u0000\u0123\u0124\u0005(\u0000\u0000\u0124T\u0001"+
		"\u0000\u0000\u0000\u0125\u0126\u0005)\u0000\u0000\u0126V\u0001\u0000\u0000"+
		"\u0000\u0127\u0128\u0005[\u0000\u0000\u0128X\u0001\u0000\u0000\u0000\u0129"+
		"\u012a\u0005]\u0000\u0000\u012aZ\u0001\u0000\u0000\u0000\u012b\u012c\u0005"+
		"{\u0000\u0000\u012c\\\u0001\u0000\u0000\u0000\u012d\u012e\u0005}\u0000"+
		"\u0000\u012e^\u0001\u0000\u0000\u0000\u012f\u0130\u0005\\\u0000\u0000"+
		"\u0130\u0131\u0003i4\u0000\u0131`\u0001\u0000\u0000\u0000\u0132\u0139"+
		"\u0005\"\u0000\u0000\u0133\u0134\u0005\\\u0000\u0000\u0134\u0138\u0005"+
		"\"\u0000\u0000\u0135\u0138\u0003_/\u0000\u0136\u0138\b\u0004\u0000\u0000"+
		"\u0137\u0133\u0001\u0000\u0000\u0000\u0137\u0135\u0001\u0000\u0000\u0000"+
		"\u0137\u0136\u0001\u0000\u0000\u0000\u0138\u013b\u0001\u0000\u0000\u0000"+
		"\u0139\u013a\u0001\u0000\u0000\u0000\u0139\u0137\u0001\u0000\u0000\u0000"+
		"\u013a\u013c\u0001\u0000\u0000\u0000\u013b\u0139\u0001\u0000\u0000\u0000"+
		"\u013c\u013d\u0005\"\u0000\u0000\u013d\u013e\u00060\u0000\u0000\u013e"+
		"b\u0001\u0000\u0000\u0000\u013f\u0145\u0005\"\u0000\u0000\u0140\u0141"+
		"\u0005\\\u0000\u0000\u0141\u0144\u0005\"\u0000\u0000\u0142\u0144\b\u0005"+
		"\u0000\u0000\u0143\u0140\u0001\u0000\u0000\u0000\u0143\u0142\u0001\u0000"+
		"\u0000\u0000\u0144\u0147\u0001\u0000\u0000\u0000\u0145\u0146\u0001\u0000"+
		"\u0000\u0000\u0145\u0143\u0001\u0000\u0000\u0000\u0146\u0148\u0001\u0000"+
		"\u0000\u0000\u0147\u0145\u0001\u0000\u0000\u0000\u0148\u0149\u0005\"\u0000"+
		"\u0000\u0149\u014a\u00061\u0001\u0000\u014ad\u0001\u0000\u0000\u0000\u014b"+
		"\u0151\u0005\"\u0000\u0000\u014c\u014d\u0005\\\u0000\u0000\u014d\u0150"+
		"\u0005\"\u0000\u0000\u014e\u0150\t\u0000\u0000\u0000\u014f\u014c\u0001"+
		"\u0000\u0000\u0000\u014f\u014e\u0001\u0000\u0000\u0000\u0150\u0153\u0001"+
		"\u0000\u0000\u0000\u0151\u0152\u0001\u0000\u0000\u0000\u0151\u014f\u0001"+
		"\u0000\u0000\u0000\u0152\u0154\u0001\u0000\u0000\u0000\u0153\u0151\u0001"+
		"\u0000\u0000\u0000\u0154\u0155\u0007\u0006\u0000\u0000\u0155\u0156\u0006"+
		"2\u0002\u0000\u0156f\u0001\u0000\u0000\u0000\u0157\u015d\u0005\"\u0000"+
		"\u0000\u0158\u0159\u0005\\\u0000\u0000\u0159\u015c\u0005\"\u0000\u0000"+
		"\u015a\u015c\b\u0007\u0000\u0000\u015b\u0158\u0001\u0000\u0000\u0000\u015b"+
		"\u015a\u0001\u0000\u0000\u0000\u015c\u015f\u0001\u0000\u0000\u0000\u015d"+
		"\u015e\u0001\u0000\u0000\u0000\u015d\u015b\u0001\u0000\u0000\u0000\u015e"+
		"\u0160\u0001\u0000\u0000\u0000\u015f\u015d\u0001\u0000\u0000\u0000\u0160"+
		"\u0162\u0005\u0000\u0000\u0001\u0161\u0163\u0005\"\u0000\u0000\u0162\u0161"+
		"\u0001\u0000\u0000\u0000\u0162\u0163\u0001\u0000\u0000\u0000\u0163\u0164"+
		"\u0001\u0000\u0000\u0000\u0164\u0165\u00063\u0003\u0000\u0165h\u0001\u0000"+
		"\u0000\u0000\u0166\u0168\u0005\r\u0000\u0000\u0167\u0166\u0001\u0000\u0000"+
		"\u0000\u0167\u0168\u0001\u0000\u0000\u0000\u0168\u0169\u0001\u0000\u0000"+
		"\u0000\u0169\u016a\u0005\n\u0000\u0000\u016aj\u0001\u0000\u0000\u0000"+
		"\u016b\u016c\u0005-\u0000\u0000\u016c\u016d\u0005-\u0000\u0000\u016d\u0171"+
		"\u0001\u0000\u0000\u0000\u016e\u0170\t\u0000\u0000\u0000\u016f\u016e\u0001"+
		"\u0000\u0000\u0000\u0170\u0173\u0001\u0000\u0000\u0000\u0171\u0172\u0001"+
		"\u0000\u0000\u0000\u0171\u016f\u0001\u0000\u0000\u0000\u0172\u0176\u0001"+
		"\u0000\u0000\u0000\u0173\u0171\u0001\u0000\u0000\u0000\u0174\u0177\u0003"+
		"i4\u0000\u0175\u0177\u0005\u0000\u0000\u0001\u0176\u0174\u0001\u0000\u0000"+
		"\u0000\u0176\u0175\u0001\u0000\u0000\u0000\u0177\u0178\u0001\u0000\u0000"+
		"\u0000\u0178\u0179\u00065\u0004\u0000\u0179l\u0001\u0000\u0000\u0000\u017a"+
		"\u017b\u0005*\u0000\u0000\u017b\u017c\u0005)\u0000\u0000\u017c\u017d\u0001"+
		"\u0000\u0000\u0000\u017d\u017e\u00066\u0005\u0000\u017en\u0001\u0000\u0000"+
		"\u0000\u017f\u0180\u0005(\u0000\u0000\u0180\u0181\u0005*\u0000\u0000\u0181"+
		"\u0189\u0001\u0000\u0000\u0000\u0182\u0188\u0003o7\u0000\u0183\u0184\u0003"+
		"q8\u0000\u0184\u0185\u00067\u0006\u0000\u0185\u0188\u0001\u0000\u0000"+
		"\u0000\u0186\u0188\t\u0000\u0000\u0000\u0187\u0182\u0001\u0000\u0000\u0000"+
		"\u0187\u0183\u0001\u0000\u0000\u0000\u0187\u0186\u0001\u0000\u0000\u0000"+
		"\u0188\u018b\u0001\u0000\u0000\u0000\u0189\u018a\u0001\u0000\u0000\u0000"+
		"\u0189\u0187\u0001\u0000\u0000\u0000\u018a\u018c\u0001\u0000\u0000\u0000"+
		"\u018b\u0189\u0001\u0000\u0000\u0000\u018c\u018d\u0005*\u0000\u0000\u018d"+
		"\u018e\u0005)\u0000\u0000\u018e\u018f\u0001\u0000\u0000\u0000\u018f\u0190"+
		"\u00067\u0007\u0000\u0190p\u0001\u0000\u0000\u0000\u0191\u0192\u0005("+
		"\u0000\u0000\u0192\u0193\u0005*\u0000\u0000\u0193\u0197\u0001\u0000\u0000"+
		"\u0000\u0194\u0196\t\u0000\u0000\u0000\u0195\u0194\u0001\u0000\u0000\u0000"+
		"\u0196\u0199\u0001\u0000\u0000\u0000\u0197\u0198\u0001\u0000\u0000\u0000"+
		"\u0197\u0195\u0001\u0000\u0000\u0000\u0198\u019a\u0001\u0000\u0000\u0000"+
		"\u0199\u0197\u0001\u0000\u0000\u0000\u019a\u019b\u00068\b\u0000\u019b"+
		"r\u0001\u0000\u0000\u0000\u019c\u019d\u0005#\u0000\u0000\u019d\u019e\u0006"+
		"9\t\u0000\u019et\u0001\u0000\u0000\u0000\u019f\u01a1\u0007\b\u0000\u0000"+
		"\u01a0\u019f\u0001\u0000\u0000\u0000\u01a1\u01a2\u0001\u0000\u0000\u0000"+
		"\u01a2\u01a0\u0001\u0000\u0000\u0000\u01a2\u01a3\u0001\u0000\u0000\u0000"+
		"\u01a3\u01a4\u0001\u0000\u0000\u0000\u01a4\u01a5\u0006:\u0004\u0000\u01a5"+
		"v\u0001\u0000\u0000\u0000\u0017\u0000\u00fa\u0106\u0108\u010f\u0111\u0121"+
		"\u0137\u0139\u0143\u0145\u014f\u0151\u015b\u015d\u0162\u0167\u0171\u0176"+
		"\u0187\u0189\u0197\u01a2\n\u00010\u0000\u00011\u0001\u00012\u0002\u0001"+
		"3\u0003\u0006\u0000\u0000\u00016\u0004\u00017\u0005\u00017\u0006\u0001"+
		"8\u0007\u00019\b";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}